Metadata-Version: 2.1
Name: wattpad-scraper
Version: 1.0.1
Summary: Get wattpad stories and chapters, and download them as ebook
Home-page: https://github.com/shhossain/wattpad-scraper
Author: Shafayat Hossain Shifat
Author-email: hossain0338@gmail.com
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bs4 (==0.0.1)
Requires-Dist: EbookLib (==0.18)
Requires-Dist: fake-headers (==1.0.2)
Requires-Dist: httpx (==0.23.3)
Requires-Dist: fpdf2 (>=2.6.1)

# Wattpad Scraper(wattpad stories downloader)
[![Downloads](https://static.pepy.tech/personalized-badge/wattpad-scraper?period=total&units=international_system&left_color=black&right_color=blue&left_text=Downloads)](https://pepy.tech/project/wattpad-scraper)
<br>
Get wattpad stories, download wattpad stories, convert wattpad stories to ebook (epub/pdf)

## Major Features
- Search books by title, author, genre, tag, language, status, type, etc.
- Get book by wattpad url or id
- Save book as epub/pdf/txt/html
- Login to wattpad with username and password
- Create reading list
- Add book to reading list
- Remove book from reading list
- Get reading list by title/id/url
- Get all reading lists of a user

### Important Links
- [GitHub](https://github.com/shhossain/wattpad-scraper)
- [PyPi](https://pypi.org/project/wattpad-scraper/)

## Installation

```bash
pip install wattpad-scraper
```

## Usage

### Get Book By Url
```python
from wattpad_scraper import Wattpad

wattped = Wattpad()
# wattpad = Wattpad(verbose=True)  if you want to see output in console
book_url = "https://www.wattpad.com/story/162756571-bending-the-rules-the-rules-1"
book = wattped.get_story(book_url)
print(book.title) # "Bending the Rules: The Rules 1"
print(book.author.name, book.author.url) 
print(book.description)
print(book.chapters)
print(book.chapters[0].title,book.chapters[0].content)

# Content is a List of strings and image urls.

```

### Search Books
```python
from wattpad_scraper import Wattpad

wattpad = Wattpad()
books = wattpad.search_books('harry potter by joekih01',completed=True,mature=True,free=True,paid=True,limit=10) 
print(books[0].chapters[0].content) # on search book chapters have to load first so it may take a while
print(len(books)) # 10
```

### Save the book
```python
from wattpad_scraper import Wattpad

wt = Wattpad()
book = wt.get_story("https://www.wattpad.com/story/162756571-bending-the-rules-the-rules-1")

# Save as epub
book.save("book.epub")

# Save as pdf
book.save("book.pdf")

# Save as txt
book.save("book.txt")

# Save as html (Still in development)
book.save("book.html")
```

## Auth System

## Login with username and password
```python
from wattpad_scraper import Wattpad as wt

w = wt()
w.login(username="username", password="password")
book= w.search_books("Rules") 
contents = book.chapters[2].content
# better search books that are not shown in search results for non logged users.
# More features are coming soon.
```

### Login with cookies
1. Download an extension called "Cookie - Editor" in your browser.
2. Open the extension and click Export.
3. Save copied text in to a file and rename with the `` .json`` extension.
4. Copy file location
```python
from wattpad_scraper import Wattpad as wt

w = wt()
w.login(cookies_file="path/to/cookies/file")
w.search_books("Rules")
```


### Working with reading list
```python
from wattpad_scraper import Wattpad as wt

w = wt()
w.login(username="username", password="password")

# Create a reading list
reading_list = w.create_reading_list("Super Fly")
# alternatively you can create reading list if yor are not sure if it exists
reading_list = w.create_reading_list_if_not_exists("Super Fly")

# Get a reading list by it's title (For logged in user)
super_fly = w.get_reading_list("Super Fly")

# Get a reading list by it's id
super_fly = w.get_reading_list(123456)

# Get a reading list by it's url
super_fly = w.get_reading_list("https://www.wattpad.com/list/123456-super-fly")

# Get all reading lists of a user
reading_lists = w.get_user_reading_lists("Ghost_Lord")

# Add a book to a reading list
book = w.search_books("Rules")[0]
w.add_to_reading_list(book, super_fly)
# alternatively you can use id or url of the book
w.add_to_reading_list(book.id, super_fly.id)
w.add_to_reading_list(book.url, super_fly.url)

# You can also add a book to a reading list from the reading list object
reading_list.add_book(book)
# You can also add multiple books to a reading list
reading_list.add_books([book1, book2, book3])

# Remove a book from a reading list
w.remove_from_reading_list(book, reading_list)
# alternatively you can use id or url of the book
w.remove_from_reading_list(book.id, reading_list.id)
w.remove_from_reading_list(book.url, reading_list.url)

# You can also remove a book from a reading list from the reading list object
reading_list.remove_book(book)
# You can also remove multiple books from a reading list
reading_list.remove_books([book1, book2, book3])

# Delete a reading list
w.delete_reading_list(reading_list)
# alternatively you can use id or url of the reading list
w.delete_reading_list(reading_list.id)
w.delete_reading_list(reading_list.url)

# Update a reading list
reading_list.update() # refreshes the reading list object
# Change the title of a reading list
reading_list.title = "New Title"


# You can also delete a reading list from the reading list object
reading_list.delete()

# Get all books in a reading list
books = reading_list.books # returns a list of Book objects
```





# RECENT CHANGES
## [1.0.0] - First Major Release (2023-02-02)
* Add support for reading lists, create, delete, add, remove books from reading lists
* Add support for pdf/txt/html downloads
### Major Changes:
- Add support for reading lists, create, delete, add, remove books from reading lists
- Add support for pdf/txt/html downloads
### Minor Changes:
- Previsous bug fixes
